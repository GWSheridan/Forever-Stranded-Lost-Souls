# Configuration file

main {
    # Draws random stuffs on the screen! And maybe does some other things.
    B:"Debug Mode"=false

    client {
        # Replace vanilla heart rendering.
        B:"Custom Heart Rendering"=true

        # The time (in ticks) to show the difficulty meter whenever it pops up. [range: 0 ~ 2147483647, default: 160]
        I:"Difficulty Meter Display Time"=160

        # Determines the color of the text next to your hearts. GREEN_TO_RED displays green at full health, and moves to red as you lose health. WHITE will just be good old fashioned white text. Set to PSYCHEDELIC if you want to taste the rainbow. [default: GREEN_TO_RED]
        S:"Health Text Color"=GREEN_TO_RED

        # Determines what the text next to your hearts will display. DISABLED will display nothing, ROWS will display the number of remaining rows that have health left, and HEALTH_AND_MAX will display your actual health and max health values. [default: ROWS]
        S:"Health Text Style"=ROWS

        # The colors for each additional row of hearts. The colors will loop back around to the beginning if necessary. Use hexadecimal to specify colors (like HTML color codes). [default: [bf0000], [e66000], [e69900], [e6d300], [99e600], [4ce600], [00e699], [00e6e6], [0099e6], [0000e6], [9900e6], [d580ff], [8c8c8c], [e6e6e6]]
        S:"Heart Colors" <
            bf0000
            e66000
            e69900
            e6d300
            99e600
            4ce600
            00e699
            00e6e6
            0099e6
            0000e6
            9900e6
            d580ff
            8c8c8c
            e6e6e6
         >

        # The color of your last (highest) heart outline.
        I:"Last Heart Outline Color"=16777215

        # Outline your last (highest) heart in a different color. This makes seeing your max health a little easier.
        B:"Last Heart Outline Enabled"=true

        # Sets position of the difficulty meter. Negative numbers anchor it to the right side of the screen. [range: -2147483648 ~ 2147483647, default: 5]
        I:"Position X"=5

        # Sets position of the difficulty meter. Negative numbers anchor it to the bottom of the screen. [range: -2147483648 ~ 2147483647, default: -30]
        I:"Position Y"=-30

        # Show the difficulty meter. Usually, it is displayed for a few seconds occasionally.
        B:"Render Difficulty Meter"=true

        # Render the difficulty meter at all times.
        B:"Render Difficulty Meter Always"=true

        # If difficulty is set to change when the player sleeps, they will be warned when they get in bed.
        B:"Warn When Sleeping"=true
    }

    player {

        health {
            # Allow Scaling Health to modify the player's health. Set to false if you have another mod that modifies player health, and you would like that mod to handle health modifications instead. With this option set to false, heart containers will not work, nor will the '/scalinghealth health' command.
            B:"Allow Modified Health"=true

            # The amount of health (in half hearts) the player will lose each time they die. [range: -2.14748365E9 ~ 2.14748365E9, default: 0.0]
            S:"Health Lost on Death"=0.0

            # The maximum amount of health (in half hearts) the player can reach. Zero means unlimited. [range: 0 ~ 2147483647, default: 0]
            I:"Max Health"=0

            # Allows players' health to be reset at certain frequencies.
            #   NONE - Do not do regular resets.  Weekdays (SUNDAY, MONDAY, etc.) - Reset on this day of the week. If the player does not play on this day, they will be reset the next time they log in.
            #   DAILY - Reset if the last time the player logged in was a different day.  MONTHLY - Reset if the last time the player logged in was a different month (everyone resets on the first of the month). [default: NONE]
            S:"Reset Time"=NONE

            # The amount of health (in half hearts) the player starts with. [range: 2 ~ 2147483647, default: 20]
            I:"Starting Health"=20
        }

        regen {
            # The number of ticks between each bonus regen tick (a half heart being healed). [range: 0 ~ 2147483647, default: 100]
            I:Delay=70

            # The number of ticks after being hurt before bonus regen activates. [range: 0 ~ 2147483647, default: 400]
            I:"Delay (Initial)"=400

            # Bonus health regen will be enabled. Vanilla regen is not changed in any way, this just adds extra healing!
            B:"Enable Bonus Regen"=true

            # The food consumption for each half heart regenerated. [range: 0.0 ~ 1.0, default: 0.1]
            S:"Exhaustion Added"=0.1

            # The maximum food level at which bonus regen will be active. [range: 0 ~ 20, default: 20]
            I:"Food Max"=20

            # The minimum food level at which bonus regen will be active. [range: 0 ~ 20, default: 10]
            I:"Food Min"=10
        }

        damage {
            # Also apply damage scaling to hostile mobs when they take damage. [default: false]
            B:"Affect Hostile Mobs"=false

            # Also apply damage scaling to passive mobs when they take damage. [default: false]
            B:"Affect Passive Mobs"=false

            # How much each point of difficulty affects damage scaling. With the default value of 0.04 (1/25th) and max difficulty of 250, that's up to a 10x multiplier on added damage. So player's would take 11x damage at max difficulty, if the source scale is set to 1.0. [range: 0.0 ~ 1000.0, default: 0.04]
            S:"Difficulty Weight"=0.04

            # If the damage source is not in the "Scale By Source" list, this value is used instead. [range: -3.4028235E38 ~ 3.4028235E38, default: 0.0]
            S:"Generic Scale"=0.0

            # Set damage scaling by damage source. All vanilla sources should be included, but set to no scaling. Mod sources can be added too, you'll just need the damage type string. The number represents how steeply the damage scales. 0 means no scaling (vanilla), 1 means it will be proportional to difficulty/max health (whichever you set). The scaling number can be anything, although I recommend a non-negative number. [default: [inFire 0.0], [lightningBolt 0.0], [onFire 0.0], [lava 0.0], [hotFloor 0.0], [inWall 0.0], [cramming 0.0], [drown 0.0], [starve 0.0], [cactus 0.0], [fall 0.0], [flyIntoWall 0.0], [outOfWorld 0.0], [generic 0.0], [magic 0.0], [wither 0.0], [anvil 0.0], [fallingBlock 0.0], [dragonBreath 0.0], [fireworks 0.0]]
            S:"Scale By Source" <
                inFire 0.0
                lightningBolt 0.0
                onFire 0.0
                lava 0.0
                hotFloor 0.0
                inWall 0.0
                cramming 0.0
                drown 0.0
                starve 0.0
                cactus 0.0
                fall 0.0
                flyIntoWall 0.0
                outOfWorld 0.0
                generic 0.0
                magic 0.0
                wither 0.0
                anvil 0.0
                fallingBlock 0.0
                dragonBreath 0.0
                fireworks 0.0
             >

            # Set what value we scale against. MAX_HEALTH scales to player's max health MINUS starting health. Defaults to MAX_HEALTH if an invalid string is entered. [default: MAX_HEALTH]
            S:"Scaling Mode"=MAX_HEALTH
        }

    }

    mob {
        # A multiplier for extra attack strength all mobs will receive. Set to 0 to disable extra attack strength. [range: 0.0 ~ 3.4028235E38, default: 0.1]
        S:"Damage Modifier"=0.1

        # The maximum extra attack damage a mob can receive. Zero means unlimited. [range: 0.0 ~ 1000.0, default: 10.0]
        S:"Max Damage Bonus"=10.0

        # The chance that an extra potion effect will be applied to any hostile mob. Note that this effect requires the mob to have a certain amount of "difficulty" left after it has been given extra health and damage. So entering 1 won't guarantee potion effects. [range: 0.0 ~ 1.0, default: 0.375]
        S:"Potion Chance (Hostiles)"=0.375

        # The chance that an extra potion effect will be applied to any passive mob. Note that this effect requires the mob to have a certain amount of "difficulty" left after it has been given extra health and damage. So entering 1 won't guarantee potion effects. [range: 0.0 ~ 1.0, default: 0.025]
        S:"Potion Chance (Passives)"=0.125

        # Additional XP (as percentage) per point of difficulty. For example, if this is 0.01, a mob will drop 2x (+1.0x) XP at 100 difficulty and 3x (+2.0x) at 200 [range: 0.0 ~ 1.0, default: 0.01]
        S:"XP Boost"=0.02

        health {
            # Allow boss mobs (dragon, wither, etc.) to spawn with extra health based on difficulty.
            B:"Allow Boss Extra Health"=true

            # Allow hostile mobs (monsters) to spawn with extra health based on difficulty.
            B:"Allow Hostile Extra Health"=true

            # Allow peaceful mobs (such as animals) to spawn with extra health based on difficulty.
            B:"Allow Peaceful Extra Health"=true

            # The minimum extra health a mob will have per point of difficulty. For example, at difficulty 30, a mob that normally has 20 health would have at least 50 health. [range: 0.0 ~ 3.4028235E38, default: 0.5]
            S:"Base Health Modifier"=0.6

            # The minimum extra health a peaceful will have per point of difficulty. Same as "Base Health Modifier", but for peaceful mobs! [range: 0.0 ~ 3.4028235E38, default: 0.25]
            S:"Base Health Modifier Peaceful"=0.25

            # Mobs listed here will never receive extra health, and will not become blights. There is also a separate blacklist for blights, if you still want the mob in question to have extra health. [default: ]
            S:Blacklist <
                abyssalcraft:dragonminion
             >

            # Mobs will not gain extra health or become blights in these dimensions. Integers only, any other entries will be silently ignored. [default: ]
            S:"Dimension Blacklist" <
             >

            # Describes how extra mob health is applied. This will not change the health of mobs that already exist!
            #   ADD - Adds a value based on difficulty to the mob's health, ignoring the mob's default health.
            #   MULTI - Multiplies the mob's health instead of adding a flat value. For example, endermen
            #     will always have around twice the health of zombies with this option.
            #   MULTI_HALF - Multiplies the mob's health, but the value is reduced for higher-health mobs.
            #   MULTI_QUARTER - Same as MULTI_HALF, but the scaling factor is even less. [default: MULTI_HALF]
            S:"Scaling Mode"=MULTI_QUARTER
        }

        blights {
            # If true, every mob that can be a blight will be one. [default: false]
            B:"All Mobs Are Blights"=false

            # If true, the list is a whitelist. Otherwise it is a blacklist. [default: false]
            B:"Always Blight IsWhitelist"=false

            # If "All Mobs Are Blights" is enabled, this list can be used to filter mobs. [default: ]
            S:"Always Blight List" <
             >

            # The amplifier level on the speed potion effect applied to blights. [range: -1 ~ 99, default: 4]
            I:"Amplifier Speed"=2

            # The amplifier level on the strength potion effect applied to blights. [range: -1 ~ 99, default: 1]
            I:"Amplifier Strength"=6

            # Mobs listed here will never become blights, but can still receive extra health. There is also a blacklist for extra health. [default: [minecraft:wither], [minecraft:villager], [minecolonies:citizen]]
            S:Blacklist <
                Villager
             >

            # If enabled, no bosses can become blights. If you need more control, use the Blacklist instead.
            B:"Blacklist All Bosses"=false

            # If enabled, no hostile mobs can become blights.
            B:"Blacklist All Hostiles"=false

            # If enabled, no passive (peaceful) mobs can become blights.
            B:"Blacklist All Passives"=true

            # Determines the chance of a mob spawning as a blight. Formula is blightChanceMulti * currentDifficulty / maxDifficulty [range: 0.0 ~ 3.4028235E38, default: 0.0625]
            S:"Blight Chance Multiplier"=0.0935

            # Should blights have the fire resistance potion effect?
            B:"Fire Resist"=true

            # Blight's fire will be set to ride the blight. This will make the fire follow the blight more smoothly and prevent it from bobbing. Disable if you are having issues.
            B:"Fire Rides Blights"=false

            # Should blights have the invisibility potion effect?
            B:Invisibility=false

            # Let all players know when a blight dies in chat.
            B:"Notify Players on Death"=false

            # The duration (in ticks) of the potion effects applied to blights. The effects are refreshed frequently, so this value doesn't matter in most cases... except for the lingering potion effects left by blight creepers. Set to -1 for infinite time. [range: -1 ~ 2147483647, default: 6000]
            I:"Potion Duration"=6000

            # Blight creepers will also be supercharged (like when they are struck by lightning).
            B:"Supercharge Creepers"=false

            # The multiplier applied to the amount of XP dropped when a blight is killed. [range: 0.0 ~ 1000.0, default: 10.0]
            S:"XP Multiplier"=10.0

            equipment {
                # The chance of an additional armor piece being given. Every blight receives a helmet, then has this probability of receiving a chestplate. If it gets a chestplate, it has this probability of receiving leggings, etc. [range: 0.0 ~ 1.0, default: 0.5]
                S:"Armor Piece Chance"=1.0

                # The chance that a blight will receive equipment in their hands (swords, etc.) They only get a chance at an offhand item if a main hand item is selected. Depending on the mods you have installed, there may not be any hand equipment to chose from. [range: 0.0 ~ 1.0, default: 0.5]
                S:"Hand Piece Chance"=1.0

                # The highest commonly-occuring equipment tier for blights. This goes from 0 to 4 inclusive. For armor, the defaults (tiers 0 to 4) are leather, gold, chainmail, iron, and diamond. [range: 0 ~ 4, default: 1]
                I:"Highest Common Tier"=4

                # The chance that a higher tier will be selected for a blight. A common tier is chosen first, then it has a few chances to increase. [range: 0.0 ~ 1.0, default: 0.095]
                S:"Tier Up Chance"=0.188
            }

        }

        ##########################################################################################################
        # potion
        #--------------------------------------------------------------------------------------------------------#
        # Potion effects applied to non-blights.
        ##########################################################################################################

        potion {
            # The potion effects that mobs can spawn with. You can add effects from other mods if you want to, or remove existing ones. Each line has 3 values separated by commas: the potion ID, the minimum difficulty (higher = less common), and the level (1 = level I, 2 = level II, etc). [default: [minecraft:strength,30,1], [minecraft:speed,10,1], [minecraft:speed,50,2], [minecraft:fire_resistance,10,1], [minecraft:invisibility,25,1], [minecraft:resistance,30,1]]
            S:"Mob Potions" <
             >
        }

    }

    pets {
        # The number of ticks between regen ticks on pets. Set to 0 to disable pet regen. [range: 0 ~ 72000, default: 600]
        I:"Regen Delay"=0
    }

    items {
        # If enabled, heart crystal shards will drop instead of heart containers. [default: false]
        B:"Drop Shards Instead of Containers"=false

        # The chance of a hostile mob dropping a heart canister when killed. [range: 0.0 ~ 1.0, default: 0.01]
        S:"Heart Drop Chance"=0.01

        # The chance of a passive mob (animals) dropping a heart canister when killed. [range: 0.0 ~ 1.0, default: 0.001]
        S:"Heart Drop Chance (Passive)"=0.001

        # The number of levels required to use a heart container. [range: 0 ~ 100, default: 3]
        I:"Heart XP Level Cost"=3

        # The maximum number of heart canisters that a blight will drop when killed. [range: 0 ~ 64, default: 2]
        I:"Hearts Dropped by Blight Max"=2

        # The minimum number of heart canisters that a blight will drop when killed. [range: 0 ~ 64, default: 0]
        I:"Hearts Dropped by Blight Min"=0

        # The maximum number of heart canisters that a boss will drop when killed. [range: 0 ~ 64, default: 6]
        I:"Hearts Dropped by Boss Max"=4

        # The minimum number of heart canisters that a boss will drop when killed. [range: 0 ~ 64, default: 3]
        I:"Hearts Dropped by Boss Min"=0

        # The amount of health that will be restored when using a heart container. [range: 0 ~ 2000, default: 4]
        I:"Hearts Health Restored"=4

        # If set to false, hearts will no longer increase the player's maximum health, but can still be used for healing.
        B:"Hearts Increase Max Health"=true

        cursed_heart {
            # The amount of difficulty added/removed when using a cursed heart [range: -1000.0 ~ 1000.0, default: 10.0]
            S:"Difficulty Change"=20.0
        }

        enchanted_heart {
            # The amount of difficulty added/removed when using an enchanted heart [range: -1000.0 ~ 1000.0, default: -10.0]
            S:"Difficulty Change"=-20.0
        }

    }

    difficulty {
        # Defines how the area difficulty is determined when spawning a mob.
        #   AVERAGE - The average difficulty level of all nearby players.
        #   WEIGHTED_AVERAGE - Similar to average, but closer players have a greater impact on difficulty.
        #   MIN_LEVEL - The lowest difficulty level of all nearby players.
        #   MAX_LEVEL - The highest difficulty level of all nearby players.
        #   DISTANCE_FROM_SPAWN - Based on the mob's distance from spawn.
        #   DISTANCE_FROM_ORIGIN - Based on the mob's distance from the origin.
        #   DISTANCE_AND_TIME - Mix of DISTANCE_FROM_SPAWN and WEIGHTED_AVERAGE.
        #   SERVER_WIDE - Difficulty is tracked at a server level, individual player difficulty has no impact. [default: WEIGHTED_AVERAGE]
        S:"Area Mode"=WEIGHTED_AVERAGE

        # If a player sleeps through the night, add this much difficulty. Set to a negative number to subtract from the difficulty instead. [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Added When Sleeping"=10.0

        # Allows difficulty multipliers to be set for specific dimensions. Use the dimension ID and the multiplier you want, separated by a space. For example, "-1 1.5" would make difficulty increase 1.5x faster in the Nether. [default: ]
        S:"Difficulty Dimension Multiplier" <
         >

        # The difficulty gained or lost for each blight killed. Set to 0 to disable. Positive numbers will increase difficulty, negative numbers will decrease it. [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Per Blight Kill"=0.7

        # The amount of difficulty added per unit distance from the origin/spawn, assuming "Area Mode" is set to a distance-based option. Negative numbers will decrease difficulty over distance. [range: -1000.0 ~ 1000.0, default: 0.0025]
        S:"Difficulty Per Block"=0.0060

        # The difficulty gained for each boss mob killed. Set to 0 to disable. Negative numbers cause difficulty to decrease with each kill. [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Per Boss Kill"=8.0

        # The difficulty gained for each hostile mob killed. Set to 0 to disable. Negative numbers cause difficulty to decrease with each kill. [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Per Kill"=0.0041574184

        # Lets you set difficulty changes for individual mobs. Each line has 3 values separated by spaces: entity ID, standard kill change, blight kill change. For example, entering "minecraft:zombie 0.1 -20" will cause zombie kills to add 0.1 difficulty, but killing a blight zombie will remove 20 difficulty instead. [default: ]
        S:"Difficulty Per Kill By Mob" <
         >

        # The difficulty change for each passive mob killed. Set to 0 to disable. Positive numbers will increase difficulty with each kill, negative numbers will decrease it instead. [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Difficulty Per Passive Kill"=0.3

        # Players listed here will be "exempt" from the difficulty system. Exempt players are still part of difficulty calculations, but are treated as having zero difficulty. [default: ]
        S:"Exempt Players" <
         >

        # Adds this much extra difficulty per additional player in the area. So, area difficulty will be multiplied by: 1 + group_bonus * (players_in_area - 1) [range: -10.0 ~ 10.0, default: 0.05]
        S:"Group Area Bonus"=0.0011674184

        # Difficulty added per second is multiplied by this if the player is not moving. [range: -100.0 ~ 100.0, default: 0.7]
        S:"Idle Multiplier"=0.0

        # The amount of difficulty added each second. In Difficult Life, the option was named per tick, but was actually applied each second. Negative numbers will decrease difficulty over time. [range: -1000.0 ~ 1000.0, default: 0.0011574074]
        S:"Increase Per Second"=0.0011674184

        # The difficulty a player loses on death. Entering a negative number will cause the player to gain difficulty instead! [range: -1000.0 ~ 1000.0, default: 0.0]
        S:"Lost On Death"=0.0

        # The maximum difficult level that can be reached. Note that values beyond 250 are not tested, and extremely high values may produce strange results. [range: 0.0 ~ 3.4028235E38, default: 250.0]
        S:"Max Value"=250.0

        # The minimum difficulty value. This can be different from the starting value. [range: 0.0 ~ 3.4028235E38, default: 0.0]
        S:"Min Value"=0.0

        # Allows players' difficulty to be reset at certain frequencies.
        #   NONE - Do not do regular resets.  Weekdays (SUNDAY, MONDAY, etc.) - Reset on this day of the week. If the player does not play on this day, they will be reset the next time they log in.
        #   DAILY - Reset if the last time the player logged in was a different day.  MONTHLY - Reset if the last time the player logged in was a different month (everyone resets on the first of the month). [default: NONE]
        S:"Reset Time"=NONE

        # The distance from a newly spawned mob to search for players to determine its difficulty level. Set to 0 for unlimited range. [range: 0 ~ 32767, default: 256]
        I:"Search Radius"=160

        # The starting difficulty level for new worlds. [range: 0.0 ~ 3.4028235E38, default: 0.0]
        S:"Starting Value"=0.0

        lunar_phases {
            # Difficulty multipliers for each lunar phase. There must be exactly 8 values. The first is full moon, the fifth is new moon. [default: [1.5], [1.3], [1.2], [1.0], [0.8], [1.0], [1.2], [1.3]]
            S:"Lunar Phase Multipliers" <
                1.5
                1.3
                1.2
                1.0
                0.8
                1.0
                1.2
                1.3
             >

            # Enable lunar phase difficulty multipliers. Difficulty will receive a multiplier based on the phase of the moon.
            B:"Lunar Phases Enabled"=false
        }

    }

    network {
        # The number of ticks between update packets. Smaller numbers mean more packets (and more bandwidth and processing power used), but also less client-server desynconfig. [range: 1 ~ 1200, default: 20]
        I:"Packet Delay"=20
    }

    world {

        heart_crystal_ore {
            # The maximum number of extra veins created by distance from spawn. [range: 0.0 ~ 1000.0, default: 3.0]
            S:"Extra Vein Cap"=3.0

            # The number of extra possible veins per chunk away from spawn. The default value will reach the cap at 50,000 blocks from spawn. [range: 0.0 ~ 1.0, default: 9.6E-4]
            S:"Extra Vein Rate"=9.6E-4

            # The highest y-level the ore can be found at. Must be greater than Min Height [range: 0 ~ 255, default: 35]
            I:"Max Height"=15

            # The lowest y-level the ore can be found at. Must be less than Max Height [range: 0 ~ 255, default: 10]
            I:"Min Height"=10

            # The base number of heart crystal shards dropped by the ore. Fortune III can double this value at most. [range: 1 ~ 64, default: 1]
            I:"Quantity Dropped"=1

            # The size of each vein. [range: 0 ~ 10000, default: 6]
            I:"Vein Size"=3

            # The number of veins per chunk. The fractional part is a probability of an extra vein in each chunk. [range: 0.0 ~ 10000.0, default: 0.42857143]
            S:"Veins Per Chunk"=0.42857143
        }

    }

    fake_players {
        # If enabled, fake players will be able to get heart container drops when killing mobs. Disabling should prevent at least some mob grinders from getting heart drops.
        B:"Can Generate Hearts"=false

        # If enabled, fake players can accumulate difficulty in the same way as real players. Enabling this could act as a sort of penalty for using mob grinders.
        B:"Have Difficulty"=true
    }

    compatibility {
        # Override the Morpheus new day handler to fire sleep events. Without this, difficulty will not increase when sleeping. [default: true]
        B:"Morpheus Support"=true
    }

    holidays {

        ##########################################################################################################
        # april_trickery
        #--------------------------------------------------------------------------------------------------------#
        # April Fools event options.
        ##########################################################################################################

        april_trickery {
            # May cause silly things to happen on certain day(s) in April. [default: true]
            B:Enabled=true

            # I need this in my life 24/7! [default: false]
            B:"Forced On"=false
        }

    }

}


zzlastversion {
    I:last_build=101
}


